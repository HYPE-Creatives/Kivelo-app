name: KIVELO Full CI (Frontend + Backend + Web Preview)

on:
  push:
    branches: [dev-fatai]
  pull_request:
    branches: [dev-fatai]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # =======================================
  # FRONTEND (EXPO WEB) BUILD + DEPLOY
  # =======================================
  frontend:
    name: Build and Deploy Expo Web (Frontend)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: kivelo-frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: |
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build Expo web app
        run: npx expo export -p web

      - name: Verify build output exists
        id: build-output
        run: |
          if [ -d "dist" ]; then
            echo "‚úÖ dist directory found"
            echo "has-output=true" >> $GITHUB_OUTPUT
            echo "output-path=dist" >> $GITHUB_OUTPUT
          elif [ -d "web-build" ]; then
            echo "‚úÖ web-build directory found"
            echo "has-output=true" >> $GITHUB_OUTPUT
            echo "output-path=web-build" >> $GITHUB_OUTPUT
          else
            echo "‚ùå No build output directory found"
            echo "has-output=false" >> $GITHUB_OUTPUT
            echo "output-path=" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: kivelo-frontend/${{ steps.build-output.outputs.output-path }}
          retention-days: 1

      - name: Upload static site files for GitHub Pages
        if: steps.build-output.outputs.has-output == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: kivelo-frontend/${{ steps.build-output.outputs.output-path }}

  # =======================================
  # BACKEND TESTS
  # =======================================
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: kivelo-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install backend dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run backend tests
        run: npm test || echo "No backend tests yet üöß"

      - name: Upload backend test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: |
            kivelo-backend/test-results/
            kivelo-backend/coverage/
          retention-days: 1

  # =======================================
  # DEPLOY TO GITHUB PAGES
  # =======================================
  deploy:
    name: Deploy Web Preview to GitHub Pages
    runs-on: ubuntu-latest
    needs: [frontend, backend]  # Wait for both frontend and backend
    if: needs.frontend.result == 'success' && needs.backend.result == 'success'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./deploy-dist

      - name: Verify deployment files
        run: |
          echo "üìÇ Deployment files:"
          ls -la ./deploy-dist/
          echo "üîç Checking for index.html:"
          find ./deploy-dist -name "index.html" | head -5

      - name: Deploy static web preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: frontend-build  # Use the uploaded artifact

  # =======================================
  # FULL STACK INTEGRATION TEST (Optional)
  # =======================================
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend, backend]  # Run after both frontend and backend complete
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend-build

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run integration checks
        run: |
          echo "‚úÖ Frontend build completed:"
          find ./frontend-build -name "*.html" | head -3
          echo "‚úÖ Backend tests completed"
          echo "üéØ Both frontend and backend are ready for deployment"